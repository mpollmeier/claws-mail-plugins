# -*- coding: utf-8 -*-

import pygtk
pygtk.require('2.0')
import gtk

# lists to store information for cleanup in the shutdown script
mainwindow_merge_ids = []
mainwindow_actions = []


# function definitions

def add_python_documentation_menu_item():
    # Adds a Help -> Python API documentation menu item
    def pydoc_cb(action):
        # callback for "Python API documentation" action
        import os, tempfile, subprocess, pydoc
        working_directory = os.getcwd()  # store current working directory
        os.chdir(tempfile.gettempdir())  # switch to a temporary directory
        pydoc.writedoc(clawsmail)        # write out API documentation to $TEMP/clawsmail.html
        subprocess.Popen(["xdg-open", "clawsmail.html"]) # start html viewer in the background
        os.chdir(working_directory)      # switch back to original working directory

    global mainwindow_merge_ids
    global mainwindow_actions
    
    # create "Python API documentation" menu item
    group = clawsmail.get_mainwindow_action_group()
    ui_manager = clawsmail.get_mainwindow_ui_manager()
    action = gtk.Action("pydoc", "Python API documentation", None, None)
    action.connect("activate", pydoc_cb)
    group.add_action(action)
    merge_id = ui_manager.new_merge_id()
    ui_manager.add_ui(merge_id, "/Menu/Help", "pydoc", "pydoc", gtk.UI_MANAGER_MENUITEM, True)
    mainwindow_merge_ids.append(merge_id)
    mainwindow_actions.append(action)

def add_mark_thread_read_menu_item():
    # Adds an Edit -> Mark thread as read menu item
    def thread_read_cb(action):
        # callback for "Mark thread as read" action
        group = clawsmail.get_mainwindow_action_group()
        group.get_action("Edit/SelectThread").activate()
        group.get_action("Message/Mark/MarkRead").activate()

    global mainwindow_merge_ids
    global mainwindow_actions
    
    # create "Mark thread read" menu item
    group = clawsmail.get_mainwindow_action_group()
    ui_manager = clawsmail.get_mainwindow_ui_manager()
    action = gtk.Action("ThreadRead", "Mark thread as read", None, None)
    action.connect("activate", thread_read_cb)
    group.add_action(action)
    merge_id = ui_manager.new_merge_id()
    ui_manager.add_ui(merge_id, "/Menu/Edit", "ThreadRead", "ThreadRead", gtk.UI_MANAGER_MENUITEM, False)
    mainwindow_merge_ids.append(merge_id)
    mainwindow_actions.append(action)

# call the functions that have been defined above, or comment the functions that you want to omit
add_python_documentation_menu_item()
add_mark_thread_read_menu_item()
